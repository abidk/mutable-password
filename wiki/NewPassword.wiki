*If you have come up with a new implementation, please contribute the code.*

----
1. Extend MutablePassword
{{{
public class NewPassword extends MutablePassword {
...
}
}}}

2. Implement evaluation code
{{{
  @Override
  public String getEvaluatedPassword() throws ParseException {
    // add code to evaluate new password
    String evaluatedPassword = getText() + new Date();
    return evaluatedPassword;
  }
}}}

3. Implement compare code
{{{
  @Override
  public boolean confirmPassword(String confirmPassword) throws PasswordException {
    try {
      String evaluatedPassword = getEvaluatedPassword();
      return confirmPassword.equals(evaluatedPassword);
    } catch (ParseException e) {
      throw new PasswordException(e);
    }
  }
}}}

4. Register the new password type
{{{
// Version 1.8
PasswordFactory.addMutablePassword( NewPassword.class );

// Version 1.9+ (Renamed method in trunk)
PasswordFactory.registerPasswordType( NewPassword.class );
}}}